// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with data 1`] = `
<View>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": "a",
          "title": "c",
          "username": "b",
          "vote": 0,
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        progressViewOffset={undefined}
        refreshing={false}
      />
    }
    refreshing={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "marginVertical": 5,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View>
          <View
            containerStyle={
              Object {
                "marginHorizontal": 0,
                "marginVertical": 3,
              }
            }
            style={
              Array [
                Object {
                  "backgroundColor": "#f2f2f2",
                  "elevation": 1,
                  "flex": 1,
                  "flexWrap": "nowrap",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.1,
                  "shadowRadius": 1.5,
                },
                Object {
                  "marginHorizontal": 0,
                  "marginVertical": 3,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingHorizontal": 15,
                  "paddingTop": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0,0,0,0.54)",
                    "fontFamily": "System",
                    "fontSize": 12,
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 16,
                  }
                }
              >
                @
                b
              </Text>
            </View>
            <View
              style={
                Object {
                  "paddingHorizontal": 15,
                  "paddingVertical": 3,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0,0,0,0.87)",
                    "fontFamily": "System",
                    "fontSize": 14,
                    "fontWeight": "600",
                    "letterSpacing": -0.154,
                    "lineHeight": 24,
                  }
                }
              >
                c
              </Text>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "paddingTop": 5,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 6,
                      "borderWidth": 0,
                      "flex": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      undefined,
                    ]
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    onPress={[Function]}
                    rippleColor="#0099cc"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "alignSelf": "stretch",
                          "borderColor": "#bdbdbd",
                          "borderRadius": 6,
                          "flex": 1,
                          "justifyContent": "center",
                          "paddingHorizontal": 3,
                          "paddingVertical": 8,
                        },
                        undefined,
                      ]
                    }
                    textStyle={
                      Object {
                        "color": "#0099cc",
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "color": "rgba(0,0,0,0.87)",
                            "fontFamily": "System",
                            "fontSize": 14,
                            "fontWeight": "600",
                            "letterSpacing": -0.154,
                            "lineHeight": 20,
                          },
                          Object {
                            "color": "#0099cc",
                          },
                        ]
                      }
                    >
                      UPVOTE
                    </Text>
                  </View>
                </View>
              </View>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "paddingHorizontal": 3,
                    "paddingVertical": 8,
                  }
                }
              >
                0
                 votes
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 6,
                      "borderWidth": 0,
                      "flex": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      undefined,
                    ]
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    onPress={[Function]}
                    rippleColor="#ff4444"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "alignSelf": "stretch",
                          "borderColor": "#bdbdbd",
                          "borderRadius": 6,
                          "flex": 1,
                          "justifyContent": "center",
                          "paddingHorizontal": 3,
                          "paddingVertical": 8,
                        },
                        undefined,
                      ]
                    }
                    textStyle={
                      Object {
                        "color": "#ff4444",
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "color": "rgba(0,0,0,0.87)",
                            "fontFamily": "System",
                            "fontSize": 14,
                            "fontWeight": "600",
                            "letterSpacing": -0.154,
                            "lineHeight": 20,
                          },
                          Object {
                            "color": "#ff4444",
                          },
                        ]
                      }
                    >
                      DOWNVOTE
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 6,
          "borderWidth": 0,
          "flex": 1,
          "justifyContent": "center",
        },
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "borderRadius": 20,
            "bottom": 10,
            "elevation": 4,
            "justifyContent": "center",
            "position": "absolute",
          },
          undefined,
        ],
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        buttonStyle={
          Array [
            Object {
              "backgroundColor": "#0099cc",
              "borderRadius": 20,
              "paddingHorizontal": 15,
              "paddingVertical": 10,
            },
            undefined,
          ]
        }
        containerStyle={
          Array [
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "borderRadius": 20,
              "bottom": 10,
              "elevation": 4,
              "justifyContent": "center",
              "position": "absolute",
            },
            undefined,
          ]
        }
        onPress={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "borderColor": "#bdbdbd",
              "borderRadius": 6,
              "flex": 1,
              "justifyContent": "center",
              "paddingHorizontal": 3,
              "paddingVertical": 8,
            },
            Array [
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "borderRadius": 20,
                "bottom": 10,
                "elevation": 4,
                "justifyContent": "center",
                "position": "absolute",
              },
              undefined,
            ],
          ]
        }
        textStyle={
          Array [
            Object {
              "color": "#f2f2f2",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgba(0,0,0,0.87)",
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "600",
                "letterSpacing": -0.154,
                "lineHeight": 20,
              },
              Array [
                Object {
                  "color": "#f2f2f2",
                },
                undefined,
              ],
            ]
          }
        >
          + NEW TOPIC
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders correctly with no data 1`] = `
<View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      No Data
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 6,
          "borderWidth": 0,
          "flex": 1,
          "justifyContent": "center",
        },
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "borderRadius": 20,
            "bottom": 10,
            "elevation": 4,
            "justifyContent": "center",
            "position": "absolute",
          },
          undefined,
        ],
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        buttonStyle={
          Array [
            Object {
              "backgroundColor": "#0099cc",
              "borderRadius": 20,
              "paddingHorizontal": 15,
              "paddingVertical": 10,
            },
            undefined,
          ]
        }
        containerStyle={
          Array [
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "borderRadius": 20,
              "bottom": 10,
              "elevation": 4,
              "justifyContent": "center",
              "position": "absolute",
            },
            undefined,
          ]
        }
        onPress={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "borderColor": "#bdbdbd",
              "borderRadius": 6,
              "flex": 1,
              "justifyContent": "center",
              "paddingHorizontal": 3,
              "paddingVertical": 8,
            },
            Array [
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "borderRadius": 20,
                "bottom": 10,
                "elevation": 4,
                "justifyContent": "center",
                "position": "absolute",
              },
              undefined,
            ],
          ]
        }
        textStyle={
          Array [
            Object {
              "color": "#f2f2f2",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgba(0,0,0,0.87)",
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "600",
                "letterSpacing": -0.154,
                "lineHeight": 20,
              },
              Array [
                Object {
                  "color": "#f2f2f2",
                },
                undefined,
              ],
            ]
          }
        >
          + NEW TOPIC
        </Text>
      </View>
    </View>
  </View>
</View>
`;
